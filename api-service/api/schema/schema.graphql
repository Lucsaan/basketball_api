type User {
  id: String
  name: String
  games: [Game]
  wins: [Game]

}

type Game {
  id: Int
  gamersId: String!
  players: [User]!
  scores: [Score]!
  archived: Boolean!
  startTime: String!
  endTime: String
  winner: User
}

type Score {
  id: Int!
  user: User!
  game: Game!
  points: Int!
}

type Query {
  helloWorld: String!
  users: [User]
  games: [Game]
}

type Mutation {
  createUser (
    name: String!
  ): [User]
}

type Mutation {
  createGame (
    userIds: [Int]!
  ): Game
}

type Mutation {
  upScore(
    userId: Int!
    gameId: Int!
  ): Game
}

type Mutation {
  downScore(
    userId: Int!
    gameId: Int!
  ): Game
}

type Mutation {
  deleteGame(
    gameId: Int!
  ): Boolean!
}


